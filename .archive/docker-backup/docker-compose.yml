services:
  # Main Flask application
  app:
    build:
      context: .
      target: application
    container_name: cvd-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/cvd.db
      - REDIS_URL=redis://redis:6379/0
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-development-secret-key-change-in-production}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - cvd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend static file server
  frontend:
    image: nginx:alpine
    container_name: cvd-frontend
    ports:
      - "8000:80"
    volumes:
      - ./pages:/usr/share/nginx/html/pages
      - ./api.js:/usr/share/nginx/html/api.js
      - ./auth-check.js:/usr/share/nginx/html/auth-check.js
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - cvd-network

  # Redis cache for AI services
  redis:
    image: redis:7-alpine
    container_name: cvd-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - cvd-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: AI worker for background tasks
  # ai-worker:
  #   build:
  #     context: .
  #     target: ai-worker
  #   container_name: cvd-ai-worker
  #   environment:
  #     - DATABASE_URL=sqlite:///data/cvd.db
  #     - REDIS_URL=redis://redis:6379/0
  #     - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
  #   volumes:
  #     - ./data:/app/data
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #     - app
  #   restart: unless-stopped
  #   networks:
  #     - cvd-network

networks:
  cvd-network:
    driver: bridge

volumes:
  redis-data:
    driver: local